{"version":3,"sources":["../node_modules/@arcgis/core/views/3d/webgl-engine/lib/intersectorUtils.js","../node_modules/@arcgis/core/views/3d/webgl-engine/core/shaderLibrary/shading/ReadShadowMap.glsl.js","../node_modules/@arcgis/core/views/3d/webgl-engine/core/shaderLibrary/ForwardLinearDepth.glsl.js","../node_modules/@arcgis/core/views/3d/webgl-engine/core/shaderLibrary/shading/AnalyticalSkyModel.glsl.js","../node_modules/@arcgis/core/views/3d/webgl-engine/core/shaderLibrary/shading/PhysicallyBasedRendering.glsl.js"],"names":["V","this","verticalOffset","selectionMode","hud","selectOpaqueTerrainOnly","invisibleTerrain","backfacesTerrain","isFiltered","store","j","_transform","y","_transformInverse","w","value","u","_transformInverseTranspose","p","_transformTranspose","_transformInverseRotation","T","g","invalidate","t","d","b","invalidateLazyTransforms","s","setTransformMatrix","multiplyTransform","r","original","update","dirty","transform","k","min","G","max","ground","init","all","normal","e","transformation","_ray","I","create","hasIntersectionPoint","n","Q","ray","direction","dist","o","origin","c","W","z","l","target","name","drapedLayerOrder","drapedLayerGraphicOrder","center","geometryId","triangleNr","intersector","copy","a","h","f","M","type","obj","i","U","metadata","layerUid","map","findLayerByUid","R","createGraphic","graphicsView","mockLayerId","graphics","getGraphicFromGraphicUid","graphicUid","allLayerViews","find","layer","suspended","getGraphicFromIntersectorMetadata","F","offset","tmpVertex","localOrigin","Math","sqrt","P","componentLocalOriginLength","mbs","S","obb","halfSize","L","quaternion","m","O","X","A","sphere","x","objectTransform","inverse","radius","B","J","v","fragment","include","uniforms","add","code","bindUniforms","shadowMappingEnabled","shadowMap","bind","bindView","bindViewCustomOrigin","output","receiveShadows","varyings","vertex","pbrMode","useCustomDTRExponentForWater"],"mappings":"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","file":"static/js/2.41a6d7e7.chunk.js","sourcesContent":["/*\nAll material copyright ESRI, All Rights Reserved, unless otherwise specified.\nSee https://js.arcgis.com/4.18/esri/copyright.txt for details.\n*/\nimport{isNone as t,isSome as s,unwrap as r}from\"../../../../core/maybe.js\";import{c as e,b as i}from\"../../../../chunks/vec3f64.js\";import{e as a,a as n,l as h,b as o,g as c,n as l,q as f,f as m}from\"../../../../chunks/vec3.js\";import{a as u,b as p,c as d,m as b}from\"../../../../chunks/mat4.js\";import{a as g}from\"../../../../chunks/mat3f64.js\";import{a as y}from\"../../../../chunks/mat4f64.js\";import{a as v}from\"../../../../chunks/quatf64.js\";import{a as S}from\"../../../../chunks/vec4f64.js\";import{b as T}from\"../../../../chunks/mat3.js\";import{t as z}from\"../../../../chunks/vec4.js\";import{c as O}from\"../../../../chunks/quat.js\";import{c as L}from\"../../../../chunks/vec3f32.js\";import{e as _}from\"../../../../chunks/boundedPlane.js\";import{c as x}from\"../../../../chunks/sphere.js\";import{ray as I}from\"../../support/geometryUtils.js\";import M from\"./Object3D.js\";function q(t){return(s,r,e)=>(a(K,s,r,e),!_(t,K))}class V{constructor(){this.verticalOffset=0,this.selectionMode=!1,this.hud=!0,this.selectOpaqueTerrainOnly=!0,this.invisibleTerrain=!1,this.backfacesTerrain=!0,this.isFiltered=!1,this.store=2}}class j{constructor(){this._transform=y(),this._transformInverse=new w({value:this._transform},u,y),this._transformInverseTranspose=new w(this._transformInverse,p,y),this._transformTranspose=new w({value:this._transform},p,y),this._transformInverseRotation=new w({value:this._transform},T,g)}invalidateLazyTransforms(){this._transformInverse.invalidate(),this._transformInverseTranspose.invalidate(),this._transformTranspose.invalidate(),this._transformInverseRotation.invalidate()}get transform(){return this._transform}get inverse(){return this._transformInverse.value}get inverseTranspose(){return this._transformInverseTranspose.value}get inverseRotation(){return this._transformInverseRotation.value}get transpose(){return this._transformTranspose.value}setTransformMatrix(t){d(this._transform,t)}multiplyTransform(t){b(this._transform,this._transform,t)}set(t){d(this._transform,t),this.invalidateLazyTransforms()}setAndInvalidateLazyTransforms(t,s){this.setTransformMatrix(t),this.multiplyTransform(s),this.invalidateLazyTransforms()}}class w{constructor(t,s,r){this.original=t,this.update=s,this.dirty=!0,this.transform=r()}invalidate(){this.dirty=!0}get value(){return this.dirty&&(this.update(this.transform,this.original.value),this.dirty=!1),this.transform}}class k{constructor(){this.min=new G,this.max=new G,this.hud=new G,this.ground=new G}init(t){this.min.init(t),this.max.init(t),this.hud.init(t),this.ground.init(t),this.all=[]}}class G{constructor(t){this.normal=e(),this.transformation=y(),this._ray=I.create(),this.init(t)}get ray(){return this._ray}get hasIntersectionPoint(){return null!=this.dist}get distanceInRenderSpace(){if(null!=this.dist)return n(Q,this.ray.direction,this.dist),h(Q)}getIntersectionPoint(t){return!!this.hasIntersectionPoint&&(n(Q,this.ray.direction,this.dist),o(t,this.ray.origin,Q),!0)}getTransformedNormal(t){return c(W,this.normal),W[3]=0,z(W,W,this.transformation),c(t,W),l(t,t),t}init(t){this.dist=void 0,this.target=void 0,this.name=void 0,this.drapedLayerOrder=void 0,this.drapedLayerGraphicOrder=void 0,this.center=null,this.geometryId=null,this.triangleNr=null,this.intersector=\"Stage\",t?I.copy(t,this._ray):this._ray=I.create()}set(t,s,r,e,a,n,h,o,l,f){t instanceof M&&(t={type:\"stage\",obj:t}),this.dist=r,c(this.normal,e),d(this.transformation,a),this.target=t,this.name=s,this.drapedLayerOrder=n,this.center=h?i(h):null,this.geometryId=o,this.triangleNr=l,this.drapedLayerGraphicOrder=f}copyFrom(t){I.copy(t._ray,this._ray),this.dist=t.dist,this.target=t.target,this.name=t.name,this.drapedLayerOrder=t.drapedLayerOrder,this.center=t.center?i(t.center):null,this.geometryId=t.geometryId,this.triangleNr=t.triangleNr,this.intersector=t.intersector,this.drapedLayerGraphicOrder=t.drapedLayerGraphicOrder,c(this.normal,t.normal),d(this.transformation,t.transformation)}toOwner(t){if(!this.target)return null;switch(this.target.type){case\"stage\":return U(this.target.obj.metadata,t);case\"external\":switch(this.intersector){case\"PointRenderer\":return function(t,s){const r=t.metadata.layerUid;return null!=r?s.map.findLayerByUid(r):null}(this.target,t);case\"I3S\":case\"IM\":case\"LodRenderer\":case\"OverlayRenderer\":return U(this.target.metadata,t);case\"TerrainRenderer\":return t.map&&t.map.ground}}return null}toGraphic(t){if(!this.target)return null;switch(this.target.type){case\"stage\":return R(this.target.obj.metadata,t);case\"external\":switch(this.intersector){case\"PointRenderer\":return this.target.metadata.createGraphic();case\"I3S\":case\"IM\":case\"LodRenderer\":case\"OverlayRenderer\":return R(this.target.metadata,t)}}return null}}function U(r,e){return t(r)||null==r.layerUid?null:s(e.graphicsView)&&r.layerUid===e.graphicsView.mockLayerId?e.graphics:e.map.findLayerByUid(r.layerUid)}function R(e,i){if(t(e))return null;const a=U(e,i);if(t(a))return null;if(a===i.graphics)return s(i.graphicsView)?r(i.graphicsView.getGraphicFromGraphicUid(e.graphicUid)):null;const n=i.allLayerViews.find((t=>t.layer===a));return n?function(t,s){if(!t||t.suspended)return null;if(\"getGraphicFromIntersectorMetadata\"in t&&s)return t.getGraphicFromIntersectorMetadata(s);if(\"getGraphicFromGraphicUid\"in t&&null!=s.graphicUid)return t.getGraphicFromGraphicUid(s.graphicUid);return null}(n,e):null}class F{constructor(t=0){this.offset=t,this.tmpVertex=e()}applyToVertex(t,s,r){const e=t+this.localOrigin[0],i=s+this.localOrigin[1],a=r+this.localOrigin[2],n=this.offset/Math.sqrt(e*e+i*i+a*a);return this.tmpVertex[0]=t+e*n,this.tmpVertex[1]=s+i*n,this.tmpVertex[2]=r+a*n,this.tmpVertex}applyToAabb(t){const s=t[0]+this.localOrigin[0],r=t[1]+this.localOrigin[1],e=t[2]+this.localOrigin[2],i=t[3]+this.localOrigin[0],a=t[4]+this.localOrigin[1],n=t[5]+this.localOrigin[2],h=this.offset/Math.sqrt(s*s+r*r+e*e);t[0]+=s*h,t[1]+=r*h,t[2]+=e*h;const o=this.offset/Math.sqrt(i*i+a*a+n*n);return t[3]+=i*o,t[4]+=a*o,t[5]+=n*o,t}}class P{constructor(t=0){this.offset=t,this.componentLocalOriginLength=0,this.tmpVertex=e(),this.mbs=S(),this.obb={center:e(),halfSize:L(),quaternion:null}}set localOrigin(t){this.componentLocalOriginLength=Math.sqrt(t[0]*t[0]+t[1]*t[1]+t[2]*t[2])}applyToVertex(t,s,r){const e=t,i=s,a=r+this.componentLocalOriginLength,n=this.offset/Math.sqrt(e*e+i*i+a*a);return this.tmpVertex[0]=t+e*n,this.tmpVertex[1]=s+i*n,this.tmpVertex[2]=r+a*n,this.tmpVertex}applyToAabb(t){const s=t[0],r=t[1],e=t[2]+this.componentLocalOriginLength,i=t[3],a=t[4],n=t[5]+this.componentLocalOriginLength,h=this.offset/Math.sqrt(s*s+r*r+e*e);t[0]+=s*h,t[1]+=r*h,t[2]+=e*h;const o=this.offset/Math.sqrt(i*i+a*a+n*n);return t[3]+=i*o,t[4]+=a*o,t[5]+=n*o,t}applyToMbs(t){const s=Math.sqrt(t[0]*t[0]+t[1]*t[1]+t[2]*t[2]),r=this.offset/s;return this.mbs[0]=t[0]+t[0]*r,this.mbs[1]=t[1]+t[1]*r,this.mbs[2]=t[2]+t[2]*r,this.mbs[3]=t[3]+t[3]*this.offset/s,this.mbs}applyToObb(t){const s=t.center,r=this.offset/Math.sqrt(s[0]*s[0]+s[1]*s[1]+s[2]*s[2]);this.obb.center[0]=s[0]+s[0]*r,this.obb.center[1]=s[1]+s[1]*r,this.obb.center[2]=s[2]+s[2]*r,f(this.obb.halfSize,t.halfSize,t.quaternion),o(this.obb.halfSize,this.obb.halfSize,t.center);const e=this.offset/Math.sqrt(this.obb.halfSize[0]*this.obb.halfSize[0]+this.obb.halfSize[1]*this.obb.halfSize[1]+this.obb.halfSize[2]*this.obb.halfSize[2]);return this.obb.halfSize[0]+=this.obb.halfSize[0]*e,this.obb.halfSize[1]+=this.obb.halfSize[1]*e,this.obb.halfSize[2]+=this.obb.halfSize[2]*e,m(this.obb.halfSize,this.obb.halfSize,t.center),O(X,t.quaternion),f(this.obb.halfSize,this.obb.halfSize,X),this.obb.halfSize[0]*=this.obb.halfSize[0]<0?-1:1,this.obb.halfSize[1]*=this.obb.halfSize[1]<0?-1:1,this.obb.halfSize[2]*=this.obb.halfSize[2]<0?-1:1,this.obb.quaternion=t.quaternion,this.obb}}class N{constructor(t=0){this.offset=t,this.sphere=x(),this.tmpVertex=e()}applyToVertex(t,s,r){const e=this.objectTransform.transform;let i=e[0]*t+e[4]*s+e[8]*r+e[12],a=e[1]*t+e[5]*s+e[9]*r+e[13],n=e[2]*t+e[6]*s+e[10]*r+e[14];const h=this.offset/Math.sqrt(i*i+a*a+n*n);i+=i*h,a+=a*h,n+=n*h;const o=this.objectTransform.inverse;return this.tmpVertex[0]=o[0]*i+o[4]*a+o[8]*n+o[12],this.tmpVertex[1]=o[1]*i+o[5]*a+o[9]*n+o[13],this.tmpVertex[2]=o[2]*i+o[6]*a+o[10]*n+o[14],this.tmpVertex}applyToMinMax(t,s){const r=this.offset/Math.sqrt(t[0]*t[0]+t[1]*t[1]+t[2]*t[2]);t[0]+=t[0]*r,t[1]+=t[1]*r,t[2]+=t[2]*r;const e=this.offset/Math.sqrt(s[0]*s[0]+s[1]*s[1]+s[2]*s[2]);s[0]+=s[0]*e,s[1]+=s[1]*e,s[2]+=s[2]*e}applyToAabb(t){const s=this.offset/Math.sqrt(t[0]*t[0]+t[1]*t[1]+t[2]*t[2]);t[0]+=t[0]*s,t[1]+=t[1]*s,t[2]+=t[2]*s;const r=this.offset/Math.sqrt(t[3]*t[3]+t[4]*t[4]+t[5]*t[5]);return t[3]+=t[3]*r,t[4]+=t[4]*r,t[5]+=t[5]*r,t}applyToBoundingSphere(t,s){const r=Math.sqrt(s[0]*s[0]+s[1]*s[1]+s[2]*s[2]),e=this.offset/r;return this.sphere.center[0]=s[0]+s[0]*e,this.sphere.center[1]=s[1]+s[1]*e,this.sphere.center[2]=s[2]+s[2]*e,this.sphere.radius=t+t*this.offset/r,this.sphere}}const A=new N;function B(t){return s(t)?(A.offset=t,A):null}const D=new P;function C(t){return s(t)?(D.offset=t,D):null}const E=new F;function H(t){return s(t)?(E.offset=t,E):null}const J=\"terrain\",K=e(),Q=e(),W=S(),X=v();export{P as I3SVerticalOffsetGlobalViewingMode,V as IntersectorOptions,G as IntersectorResult,k as IntersectorResults,j as IntersectorTransform,N as Object3DVerticalOffsetGlobalViewingMode,J as TERRAIN_ID,F as TerrainVerticalOffsetGlobalViewingMode,C as getVerticalOffsetI3S,B as getVerticalOffsetObject3D,H as getVerticalOffsetTerrain,q as sliceFilterPredicate};\n","/*\nAll material copyright ESRI, All Rights Reserved, unless otherwise specified.\nSee https://js.arcgis.com/4.18/esri/copyright.txt for details.\n*/\nimport{glsl as e}from\"../../shaderModules/interfaces.js\";import{RgbaFloatEncoding as a}from\"../util/RgbaFloatEncoding.glsl.js\";function i(i){i.fragment.include(a),i.fragment.uniforms.add(\"depthTex\",\"sampler2D\"),i.fragment.uniforms.add(\"shadowMapNum\",\"int\"),i.fragment.uniforms.add(\"shadowMapDistance\",\"vec4\"),i.fragment.uniforms.add(\"shadowMapMatrix\",\"mat4\",4),i.fragment.uniforms.add(\"depthHalfPixelSz\",\"float\"),i.fragment.code.add(e`\n    float readShadowMap(const in vec3 _vpos, float _linearDepth) {\n      float halfPixelSize = depthHalfPixelSz;\n      vec4 distance = shadowMapDistance;\n      float depth = _linearDepth;\n\n      //choose correct cascade\n      int i = depth < distance[1] ? 0 : depth < distance[2] ? 1 : depth < distance[3] ? 2 : 3;\n\n      if (i >= shadowMapNum) { return 0.0; }\n\n      mat4 mat = i == 0 ? shadowMapMatrix[0] : i == 1 ? shadowMapMatrix[1] : i == 2 ? shadowMapMatrix[2] : shadowMapMatrix[3];\n\n      vec4 lv = mat * vec4(_vpos, 1.0);\n      lv.xy /= lv.w;\n\n      // vertex completely outside? -> no shadow\n      vec3 lvpos = 0.5 * lv.xyz + vec3(0.5);\n      if (lvpos.z >= 1.0) { return 0.0; }\n      if (lvpos.x < 0.0 || lvpos.x > 1.0 || lvpos.y < 0.0 || lvpos.y > 1.0) { return 0.0; }\n\n      // calc coord in cascade texture\n      vec2 uv = vec2(float(i - 2 * (i / 2)) * 0.5, float(i / 2) * 0.5) + 0.5 * lvpos.xy;\n\n      float texSize = 0.5 / halfPixelSize;\n\n      // filter, offset by half pixels\n      vec2 st = fract((vec2(halfPixelSize) + uv) * texSize);\n\n      float s00 = rgba2float(texture2D(depthTex, uv + vec2(-halfPixelSize, -halfPixelSize))) < lvpos.z ? 1.0 : 0.0;\n      float s10 = rgba2float(texture2D(depthTex, uv + vec2(halfPixelSize, -halfPixelSize))) < lvpos.z ? 1.0 : 0.0;\n      float s11 = rgba2float(texture2D(depthTex, uv + vec2(halfPixelSize, halfPixelSize))) < lvpos.z ? 1.0 : 0.0;\n      float s01 = rgba2float(texture2D(depthTex, uv + vec2(-halfPixelSize, halfPixelSize))) < lvpos.z ? 1.0 : 0.0;\n\n      return mix(mix(s00, s10, st.x), mix(s01, s11, st.x), st.y);\n    }\n  `)}!function(e){e.bindUniforms=function(e,a,i){a.shadowMappingEnabled&&(a.shadowMap.bind(e,i),a.shadowMap.bindView(e,a.origin))},e.bindViewCustomOrigin=function(e,a,i){a.shadowMappingEnabled&&a.shadowMap.bindView(e,i)},e.bindView=function(e,a){a.shadowMappingEnabled&&a.shadowMap.bindView(e,a.origin)}}(i||(i={}));export{i as ReadShadowMap};\n","/*\nAll material copyright ESRI, All Rights Reserved, unless otherwise specified.\nSee https://js.arcgis.com/4.18/esri/copyright.txt for details.\n*/\nimport{glsl as e}from\"../shaderModules/interfaces.js\";function a(a,r){0===r.output&&r.receiveShadows?(a.varyings.add(\"linearDepth\",\"float\"),a.vertex.code.add(e`\n      void forwardLinearDepth() { linearDepth = gl_Position.w; }\n    `)):1===r.output||3===r.output?(a.varyings.add(\"linearDepth\",\"float\"),a.vertex.uniforms.add(\"uCameraNearFar\",\"vec2\"),a.vertex.code.add(e`\n      void forwardLinearDepth() {\n        linearDepth = (-position_view().z - uCameraNearFar[0]) / (uCameraNearFar[1] - uCameraNearFar[0]);\n      }\n    `)):a.vertex.code.add(e`\n      void forwardLinearDepth() {}\n    `)}export{a as ForwardLinearDepth};\n","/*\nAll material copyright ESRI, All Rights Reserved, unless otherwise specified.\nSee https://js.arcgis.com/4.18/esri/copyright.txt for details.\n*/\nimport{glsl as e}from\"../../shaderModules/interfaces.js\";function t(t){const a=t.fragment.code;a.add(e`\n    vec3 evaluateDiffuseIlluminationHemisphere(vec3 ambientGround, vec3 ambientSky, float NdotNG)\n    {\n      return ((1.0 - NdotNG) * ambientGround + (1.0 + NdotNG) * ambientSky) * 0.5;\n    }\n    `),a.add(e`\n    float integratedRadiance(float cosTheta2, float roughness)\n    {\n      return (cosTheta2 - 1.0) / (cosTheta2 * (1.0 - roughness * roughness) - 1.0);\n    }\n    `),a.add(e`\n    vec3 evaluateSpecularIlluminationHemisphere(vec3 ambientGround, vec3 ambientSky, float RdotNG, float roughness)\n    {\n      float cosTheta2 = 1.0 - RdotNG * RdotNG;\n      float intRadTheta = integratedRadiance(cosTheta2, roughness);\n\n      // Calculate the integrated directional radiance of the ground and the sky\n      float ground = RdotNG < 0.0 ? 1.0 - intRadTheta : 1.0 + intRadTheta;\n      float sky = 2.0 - ground;\n      return (ground * ambientGround + sky * ambientSky) * 0.5;\n    }\n    `)}export{t as AnalyticalSkyModel};\n","/*\nAll material copyright ESRI, All Rights Reserved, unless otherwise specified.\nSee https://js.arcgis.com/4.18/esri/copyright.txt for details.\n*/\nimport{glsl as e}from\"../../shaderModules/interfaces.js\";import{PiUtils as o}from\"./PiUtils.glsl.js\";import{AnalyticalSkyModel as t}from\"./AnalyticalSkyModel.glsl.js\";function n(n,a){const r=n.fragment.code;n.include(o),3===a.pbrMode||4===a.pbrMode?(r.add(e`\n    struct PBRShadingWater\n    {\n        float NdotL;   // cos angle between normal and light direction\n        float NdotV;   // cos angle between normal and view direction\n        float NdotH;   // cos angle between normal and half vector\n        float VdotH;   // cos angle between view direction and half vector\n        float LdotH;   // cos angle between light direction and half vector\n        float VdotN;   // cos angle between view direction and normal vector\n    };\n\n    float dtrExponent = ${a.useCustomDTRExponentForWater?\"2.2\":\"2.0\"};\n    `),r.add(e`\n    vec3 fresnelReflection(float angle, vec3 f0, float f90) {\n      return f0 + (f90 - f0) * pow(1.0 - angle, 5.0);\n    }\n    `),r.add(e`\n    float normalDistributionWater(float NdotH, float roughness)\n    {\n      float r2 = roughness * roughness;\n      float NdotH2 = NdotH * NdotH;\n      float denom = pow((NdotH2 * (r2 - 1.0) + 1.0), dtrExponent) * PI;\n      return r2 / denom;\n    }\n    `),r.add(e`\n    float geometricOcclusionKelemen(float LoH)\n    {\n        return 0.25 / (LoH * LoH);\n    }\n    `),r.add(e`\n    vec3 brdfSpecularWater(in PBRShadingWater props, float roughness, vec3 F0, float F0Max)\n    {\n      vec3  F = fresnelReflection(props.VdotH, F0, F0Max);\n      float dSun = normalDistributionWater(props.NdotH, roughness);\n      float V = geometricOcclusionKelemen(props.LdotH);\n\n      float diffusionSunHaze = mix(roughness + 0.045, roughness + 0.385, 1.0 - props.VdotH);\n      float strengthSunHaze  = 1.2;\n      float dSunHaze = normalDistributionWater(props.NdotH, diffusionSunHaze)*strengthSunHaze;\n\n      return ((dSun + dSunHaze) * V) * F;\n    }\n\n    vec3 tonemapACES(const vec3 x) {\n      return (x * (2.51 * x + 0.03)) / (x * (2.43 * x + 0.59) + 0.14);\n    }\n    `)):1!==a.pbrMode&&2!==a.pbrMode||(n.include(t),r.add(e`\n    struct PBRShadingInfo\n    {\n        float NdotL;                  // cos angle between normal and light direction\n        float NdotV;                  // cos angle between normal and view direction\n        float NdotH;                  // cos angle between normal and half vector\n        float VdotH;                  // cos angle between view direction and half vector\n        float LdotH;                  // cos angle between view light direction and half vector\n        float NdotNG;                 // cos angle between normal and normal of the ground\n        float RdotNG;                 // cos angle between view direction reflected of the normal and normal of the ground\n        float NdotAmbDir;             // cos angle between view direction and the fill light in ambient illumination\n        float NdotH_Horizon;          // cos angle between normal and half vector defined with horizon illumination\n        vec3 skyRadianceToSurface;         // integrated radiance of the sky based on the surface roughness (used for specular reflection)\n        vec3 groundRadianceToSurface;      // integrated radiance of the ground based on the surface roughness (used for specular reflection)\n        vec3 skyIrradianceToSurface;       // irradiance of the sky (used for diffuse reflection)\n        vec3 groundIrradianceToSurface;    // irradiance of the ground (used for diffuse reflection)\n\n        float averageAmbientRadiance;      // average ambient radiance used to deduce black level in gamut mapping\n        float ssao;                   // ssao coefficient\n        vec3 albedoLinear;            // linear color of the albedo\n        vec3 f0;                      // fresnel value at normal incident light\n        vec3 f90;                     // fresnel value at 90o of incident light\n\n        vec3 diffuseColor;            // diffuse color of the material used in environment illumination\n        float metalness;              // metalness of the material\n        float roughness;              // roughness of the material\n    };\n    `),r.add(e`\n    float normalDistribution(float NdotH, float roughness)\n    {\n        float a = NdotH * roughness;\n        float b = roughness / (1.0 - NdotH * NdotH + a * a);\n        return b * b * INV_PI;\n    }\n    `),r.add(e`\n    const vec4 c0 = vec4(-1.0, -0.0275, -0.572,  0.022);\n    const vec4 c1 = vec4( 1.0,  0.0425,  1.040, -0.040);\n    const vec2 c2 = vec2(-1.04, 1.04);\n\n    vec2 prefilteredDFGAnalytical(float roughness, float NdotV) {\n        vec4 r = roughness * c0 + c1;\n        float a004 = min(r.x * r.x, exp2(-9.28 * NdotV)) * r.x + r.y;\n        return c2 * a004 + r.zw;\n    }\n    `),r.add(e`\n    vec3 evaluateEnvironmentIllumination(PBRShadingInfo inputs) {\n      vec3 indirectDiffuse = evaluateDiffuseIlluminationHemisphere(inputs.groundIrradianceToSurface, inputs.skyIrradianceToSurface, inputs.NdotNG);\n      vec3 indirectSpecular = evaluateSpecularIlluminationHemisphere(inputs.groundRadianceToSurface, inputs.skyRadianceToSurface, inputs.RdotNG, inputs.roughness);\n\n      // From diffuse illumination calculate reflected color\n      vec3 diffuseComponent = inputs.diffuseColor * indirectDiffuse * INV_PI;\n\n      // From specular illumination calculate reflected color\n      vec2 dfg = prefilteredDFGAnalytical(inputs.roughness, inputs.NdotV);\n      vec3 specularColor = inputs.f0 * dfg.x + inputs.f90 * dfg.y;\n      vec3 specularComponent = specularColor * indirectSpecular;\n\n      return (diffuseComponent + specularComponent);\n    }\n    `),r.add(e`\n    float gamutMapChanel(float x, vec2 p){\n      return (x < p.x) ? mix(0.0, p.y, x/p.x) : mix(p.y, 1.0, (x - p.x) / (1.0 - p.x) );\n    }`),r.add(e`\n    vec3 blackLevelSoftCompression(vec3 inColor, PBRShadingInfo inputs){\n      vec3 outColor;\n      vec2 p = vec2(0.02 * (inputs.averageAmbientRadiance), 0.0075 * (inputs.averageAmbientRadiance));\n      outColor.x = gamutMapChanel(inColor.x, p) ;\n      outColor.y = gamutMapChanel(inColor.y, p) ;\n      outColor.z = gamutMapChanel(inColor.z, p) ;\n      return outColor;\n    }\n    `))}export{n as PhysicallyBasedRendering};\n"],"sourceRoot":""}