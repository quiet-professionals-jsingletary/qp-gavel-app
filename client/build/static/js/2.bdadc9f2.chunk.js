(this["webpackJsonpqp-ampd-app"]=this["webpackJsonpqp-ampd-app"]||[]).push([[2],{1009:function(t,e,n){"use strict";n.d(e,"a",(function(){return O})),n.d(e,"b",(function(){return w})),n.d(e,"c",(function(){return S})),n.d(e,"d",(function(){return j})),n.d(e,"e",(function(){return V})),n.d(e,"f",(function(){return I}));var a=n(3),r=n(2),i=n(4),o=n(24),s=n(9),c=n(87),l=n(267),u=n(115),f=n(301),h=n(114),d=n(221),p=n(90),b=n(532),v=n(76),m=(n(623),n(624)),g=n(57),y=n(445);var O=function t(){Object(r.a)(this,t),this.verticalOffset=0,this.selectionMode=!1,this.hud=!0,this.selectOpaqueTerrainOnly=!0,this.invisibleTerrain=!1,this.backfacesTerrain=!0,this.isFiltered=!1,this.store=2},j=function(){function t(){Object(r.a)(this,t),this._transform=Object(u.b)(),this._transformInverse=new x({value:this._transform},c.a,u.b),this._transformInverseTranspose=new x(this._transformInverse,c.b,u.b),this._transformTranspose=new x({value:this._transform},c.b,u.b),this._transformInverseRotation=new x({value:this._transform},d.b,l.a)}return Object(a.a)(t,[{key:"invalidateLazyTransforms",value:function(){this._transformInverse.invalidate(),this._transformInverseTranspose.invalidate(),this._transformTranspose.invalidate(),this._transformInverseRotation.invalidate()}},{key:"setTransformMatrix",value:function(t){Object(c.c)(this._transform,t)}},{key:"multiplyTransform",value:function(t){Object(c.l)(this._transform,this._transform,t)}},{key:"set",value:function(t){Object(c.c)(this._transform,t),this.invalidateLazyTransforms()}},{key:"setAndInvalidateLazyTransforms",value:function(t,e){this.setTransformMatrix(t),this.multiplyTransform(e),this.invalidateLazyTransforms()}},{key:"transform",get:function(){return this._transform}},{key:"inverse",get:function(){return this._transformInverse.value}},{key:"inverseTranspose",get:function(){return this._transformInverseTranspose.value}},{key:"inverseRotation",get:function(){return this._transformInverseRotation.value}},{key:"transpose",get:function(){return this._transformTranspose.value}}]),t}(),x=function(){function t(e,n,a){Object(r.a)(this,t),this.original=e,this.update=n,this.dirty=!0,this.transform=a()}return Object(a.a)(t,[{key:"invalidate",value:function(){this.dirty=!0}},{key:"value",get:function(){return this.dirty&&(this.update(this.transform,this.original.value),this.dirty=!1),this.transform}}]),t}(),S=function(){function t(){Object(r.a)(this,t),this.min=new w,this.max=new w,this.hud=new w,this.ground=new w}return Object(a.a)(t,[{key:"init",value:function(t){this.min.init(t),this.max.init(t),this.hud.init(t),this.ground.init(t),this.all=[]}}]),t}(),w=function(){function t(e){Object(r.a)(this,t),this.normal=Object(o.e)(),this.transformation=Object(u.b)(),this._ray=g.e.create(),this.init(e)}return Object(a.a)(t,[{key:"getIntersectionPoint",value:function(t){return!!this.hasIntersectionPoint&&(Object(s.b)(L,this.ray.direction,this.dist),Object(s.c)(t,this.ray.origin,L),!0)}},{key:"getTransformedNormal",value:function(t){return Object(s.h)(R,this.normal),R[3]=0,Object(p.m)(R,R,this.transformation),Object(s.h)(t,R),Object(s.o)(t,t),t}},{key:"init",value:function(t){this.dist=void 0,this.target=void 0,this.name=void 0,this.drapedLayerOrder=void 0,this.drapedLayerGraphicOrder=void 0,this.center=null,this.geometryId=null,this.triangleNr=null,this.intersector="Stage",t?g.e.copy(t,this._ray):this._ray=g.e.create()}},{key:"set",value:function(t,e,n,a,r,i,l,u,f,h){t instanceof y.a&&(t={type:"stage",obj:t}),this.dist=n,Object(s.h)(this.normal,a),Object(c.c)(this.transformation,r),this.target=t,this.name=e,this.drapedLayerOrder=i,this.center=l?Object(o.d)(l):null,this.geometryId=u,this.triangleNr=f,this.drapedLayerGraphicOrder=h}},{key:"copyFrom",value:function(t){g.e.copy(t._ray,this._ray),this.dist=t.dist,this.target=t.target,this.name=t.name,this.drapedLayerOrder=t.drapedLayerOrder,this.center=t.center?Object(o.d)(t.center):null,this.geometryId=t.geometryId,this.triangleNr=t.triangleNr,this.intersector=t.intersector,this.drapedLayerGraphicOrder=t.drapedLayerGraphicOrder,Object(s.h)(this.normal,t.normal),Object(c.c)(this.transformation,t.transformation)}},{key:"toOwner",value:function(t){if(!this.target)return null;switch(this.target.type){case"stage":return z(this.target.obj.metadata,t);case"external":switch(this.intersector){case"PointRenderer":return function(t,e){var n=t.metadata.layerUid;return null!=n?e.map.findLayerByUid(n):null}(this.target,t);case"I3S":case"IM":case"LodRenderer":case"OverlayRenderer":return z(this.target.metadata,t);case"TerrainRenderer":return t.map&&t.map.ground}}return null}},{key:"toGraphic",value:function(t){if(!this.target)return null;switch(this.target.type){case"stage":return M(this.target.obj.metadata,t);case"external":switch(this.intersector){case"PointRenderer":return this.target.metadata.createGraphic();case"I3S":case"IM":case"LodRenderer":case"OverlayRenderer":return M(this.target.metadata,t)}}return null}},{key:"ray",get:function(){return this._ray}},{key:"hasIntersectionPoint",get:function(){return null!=this.dist}},{key:"distanceInRenderSpace",get:function(){if(null!=this.dist)return Object(s.b)(L,this.ray.direction,this.dist),Object(s.m)(L)}}]),t}();function z(t,e){return Object(i.g)(t)||null==t.layerUid?null:Object(i.h)(e.graphicsView)&&t.layerUid===e.graphicsView.mockLayerId?e.graphics:e.map.findLayerByUid(t.layerUid)}function M(t,e){if(Object(i.g)(t))return null;var n=z(t,e);if(Object(i.g)(n))return null;if(n===e.graphics)return Object(i.h)(e.graphicsView)?Object(i.n)(e.graphicsView.getGraphicFromGraphicUid(t.graphicUid)):null;var a,r,o=e.allLayerViews.find((function(t){return t.layer===n}));return o?(r=t,!(a=o)||a.suspended?null:"getGraphicFromIntersectorMetadata"in a&&r?a.getGraphicFromIntersectorMetadata(r):"getGraphicFromGraphicUid"in a&&null!=r.graphicUid?a.getGraphicFromGraphicUid(r.graphicUid):null):null}var T=function(){function t(){var e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:0;Object(r.a)(this,t),this.offset=e,this.tmpVertex=Object(o.e)()}return Object(a.a)(t,[{key:"applyToVertex",value:function(t,e,n){var a=t+this.localOrigin[0],r=e+this.localOrigin[1],i=n+this.localOrigin[2],o=this.offset/Math.sqrt(a*a+r*r+i*i);return this.tmpVertex[0]=t+a*o,this.tmpVertex[1]=e+r*o,this.tmpVertex[2]=n+i*o,this.tmpVertex}},{key:"applyToAabb",value:function(t){var e=t[0]+this.localOrigin[0],n=t[1]+this.localOrigin[1],a=t[2]+this.localOrigin[2],r=t[3]+this.localOrigin[0],i=t[4]+this.localOrigin[1],o=t[5]+this.localOrigin[2],s=this.offset/Math.sqrt(e*e+n*n+a*a);t[0]+=e*s,t[1]+=n*s,t[2]+=a*s;var c=this.offset/Math.sqrt(r*r+i*i+o*o);return t[3]+=r*c,t[4]+=i*c,t[5]+=o*c,t}}]),t}(),k=function(){function t(){var e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:0;Object(r.a)(this,t),this.offset=e,this.componentLocalOriginLength=0,this.tmpVertex=Object(o.e)(),this.mbs=Object(h.c)(),this.obb={center:Object(o.e)(),halfSize:Object(v.b)(),quaternion:null}}return Object(a.a)(t,[{key:"applyToVertex",value:function(t,e,n){var a=t,r=e,i=n+this.componentLocalOriginLength,o=this.offset/Math.sqrt(a*a+r*r+i*i);return this.tmpVertex[0]=t+a*o,this.tmpVertex[1]=e+r*o,this.tmpVertex[2]=n+i*o,this.tmpVertex}},{key:"applyToAabb",value:function(t){var e=t[0],n=t[1],a=t[2]+this.componentLocalOriginLength,r=t[3],i=t[4],o=t[5]+this.componentLocalOriginLength,s=this.offset/Math.sqrt(e*e+n*n+a*a);t[0]+=e*s,t[1]+=n*s,t[2]+=a*s;var c=this.offset/Math.sqrt(r*r+i*i+o*o);return t[3]+=r*c,t[4]+=i*c,t[5]+=o*c,t}},{key:"applyToMbs",value:function(t){var e=Math.sqrt(t[0]*t[0]+t[1]*t[1]+t[2]*t[2]),n=this.offset/e;return this.mbs[0]=t[0]+t[0]*n,this.mbs[1]=t[1]+t[1]*n,this.mbs[2]=t[2]+t[2]*n,this.mbs[3]=t[3]+t[3]*this.offset/e,this.mbs}},{key:"applyToObb",value:function(t){var e=t.center,n=this.offset/Math.sqrt(e[0]*e[0]+e[1]*e[1]+e[2]*e[2]);this.obb.center[0]=e[0]+e[0]*n,this.obb.center[1]=e[1]+e[1]*n,this.obb.center[2]=e[2]+e[2]*n,Object(s.r)(this.obb.halfSize,t.halfSize,t.quaternion),Object(s.c)(this.obb.halfSize,this.obb.halfSize,t.center);var a=this.offset/Math.sqrt(this.obb.halfSize[0]*this.obb.halfSize[0]+this.obb.halfSize[1]*this.obb.halfSize[1]+this.obb.halfSize[2]*this.obb.halfSize[2]);return this.obb.halfSize[0]+=this.obb.halfSize[0]*a,this.obb.halfSize[1]+=this.obb.halfSize[1]*a,this.obb.halfSize[2]+=this.obb.halfSize[2]*a,Object(s.g)(this.obb.halfSize,this.obb.halfSize,t.center),Object(b.a)(H,t.quaternion),Object(s.r)(this.obb.halfSize,this.obb.halfSize,H),this.obb.halfSize[0]*=this.obb.halfSize[0]<0?-1:1,this.obb.halfSize[1]*=this.obb.halfSize[1]<0?-1:1,this.obb.halfSize[2]*=this.obb.halfSize[2]<0?-1:1,this.obb.quaternion=t.quaternion,this.obb}},{key:"localOrigin",set:function(t){this.componentLocalOriginLength=Math.sqrt(t[0]*t[0]+t[1]*t[1]+t[2]*t[2])}}]),t}(),N=new(function(){function t(){var e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:0;Object(r.a)(this,t),this.offset=e,this.sphere=Object(m.a)(),this.tmpVertex=Object(o.e)()}return Object(a.a)(t,[{key:"applyToVertex",value:function(t,e,n){var a=this.objectTransform.transform,r=a[0]*t+a[4]*e+a[8]*n+a[12],i=a[1]*t+a[5]*e+a[9]*n+a[13],o=a[2]*t+a[6]*e+a[10]*n+a[14],s=this.offset/Math.sqrt(r*r+i*i+o*o);r+=r*s,i+=i*s,o+=o*s;var c=this.objectTransform.inverse;return this.tmpVertex[0]=c[0]*r+c[4]*i+c[8]*o+c[12],this.tmpVertex[1]=c[1]*r+c[5]*i+c[9]*o+c[13],this.tmpVertex[2]=c[2]*r+c[6]*i+c[10]*o+c[14],this.tmpVertex}},{key:"applyToMinMax",value:function(t,e){var n=this.offset/Math.sqrt(t[0]*t[0]+t[1]*t[1]+t[2]*t[2]);t[0]+=t[0]*n,t[1]+=t[1]*n,t[2]+=t[2]*n;var a=this.offset/Math.sqrt(e[0]*e[0]+e[1]*e[1]+e[2]*e[2]);e[0]+=e[0]*a,e[1]+=e[1]*a,e[2]+=e[2]*a}},{key:"applyToAabb",value:function(t){var e=this.offset/Math.sqrt(t[0]*t[0]+t[1]*t[1]+t[2]*t[2]);t[0]+=t[0]*e,t[1]+=t[1]*e,t[2]+=t[2]*e;var n=this.offset/Math.sqrt(t[3]*t[3]+t[4]*t[4]+t[5]*t[5]);return t[3]+=t[3]*n,t[4]+=t[4]*n,t[5]+=t[5]*n,t}},{key:"applyToBoundingSphere",value:function(t,e){var n=Math.sqrt(e[0]*e[0]+e[1]*e[1]+e[2]*e[2]),a=this.offset/n;return this.sphere.center[0]=e[0]+e[0]*a,this.sphere.center[1]=e[1]+e[1]*a,this.sphere.center[2]=e[2]+e[2]*a,this.sphere.radius=t+t*this.offset/n,this.sphere}}]),t}());function I(t){return Object(i.h)(t)?(N.offset=t,N):null}new k;new T;var V="terrain",L=(Object(o.e)(),Object(o.e)()),R=Object(h.c)(),H=Object(f.a)()},963:function(t,e,n){"use strict";n.d(e,"a",(function(){return c}));var a,r=n(30),i=n(31),o=n(357);function s(){var t=Object(r.a)(["\n    float readShadowMap(const in vec3 _vpos, float _linearDepth) {\n      float halfPixelSize = depthHalfPixelSz;\n      vec4 distance = shadowMapDistance;\n      float depth = _linearDepth;\n\n      //choose correct cascade\n      int i = depth < distance[1] ? 0 : depth < distance[2] ? 1 : depth < distance[3] ? 2 : 3;\n\n      if (i >= shadowMapNum) { return 0.0; }\n\n      mat4 mat = i == 0 ? shadowMapMatrix[0] : i == 1 ? shadowMapMatrix[1] : i == 2 ? shadowMapMatrix[2] : shadowMapMatrix[3];\n\n      vec4 lv = mat * vec4(_vpos, 1.0);\n      lv.xy /= lv.w;\n\n      // vertex completely outside? -> no shadow\n      vec3 lvpos = 0.5 * lv.xyz + vec3(0.5);\n      if (lvpos.z >= 1.0) { return 0.0; }\n      if (lvpos.x < 0.0 || lvpos.x > 1.0 || lvpos.y < 0.0 || lvpos.y > 1.0) { return 0.0; }\n\n      // calc coord in cascade texture\n      vec2 uv = vec2(float(i - 2 * (i / 2)) * 0.5, float(i / 2) * 0.5) + 0.5 * lvpos.xy;\n\n      float texSize = 0.5 / halfPixelSize;\n\n      // filter, offset by half pixels\n      vec2 st = fract((vec2(halfPixelSize) + uv) * texSize);\n\n      float s00 = rgba2float(texture2D(depthTex, uv + vec2(-halfPixelSize, -halfPixelSize))) < lvpos.z ? 1.0 : 0.0;\n      float s10 = rgba2float(texture2D(depthTex, uv + vec2(halfPixelSize, -halfPixelSize))) < lvpos.z ? 1.0 : 0.0;\n      float s11 = rgba2float(texture2D(depthTex, uv + vec2(halfPixelSize, halfPixelSize))) < lvpos.z ? 1.0 : 0.0;\n      float s01 = rgba2float(texture2D(depthTex, uv + vec2(-halfPixelSize, halfPixelSize))) < lvpos.z ? 1.0 : 0.0;\n\n      return mix(mix(s00, s10, st.x), mix(s01, s11, st.x), st.y);\n    }\n  "]);return s=function(){return t},t}function c(t){t.fragment.include(o.a),t.fragment.uniforms.add("depthTex","sampler2D"),t.fragment.uniforms.add("shadowMapNum","int"),t.fragment.uniforms.add("shadowMapDistance","vec4"),t.fragment.uniforms.add("shadowMapMatrix","mat4",4),t.fragment.uniforms.add("depthHalfPixelSz","float"),t.fragment.code.add(Object(i.a)(s()))}(a=c||(c={})).bindUniforms=function(t,e,n){e.shadowMappingEnabled&&(e.shadowMap.bind(t,n),e.shadowMap.bindView(t,e.origin))},a.bindViewCustomOrigin=function(t,e,n){e.shadowMappingEnabled&&e.shadowMap.bindView(t,n)},a.bindView=function(t,e){e.shadowMappingEnabled&&e.shadowMap.bindView(t,e.origin)}},978:function(t,e,n){"use strict";n.d(e,"a",(function(){return c}));var a=n(30),r=n(31);function i(){var t=Object(a.a)(["\n      void forwardLinearDepth() {}\n    "]);return i=function(){return t},t}function o(){var t=Object(a.a)(["\n      void forwardLinearDepth() {\n        linearDepth = (-position_view().z - uCameraNearFar[0]) / (uCameraNearFar[1] - uCameraNearFar[0]);\n      }\n    "]);return o=function(){return t},t}function s(){var t=Object(a.a)(["\n      void forwardLinearDepth() { linearDepth = gl_Position.w; }\n    "]);return s=function(){return t},t}function c(t,e){0===e.output&&e.receiveShadows?(t.varyings.add("linearDepth","float"),t.vertex.code.add(Object(r.a)(s()))):1===e.output||3===e.output?(t.varyings.add("linearDepth","float"),t.vertex.uniforms.add("uCameraNearFar","vec2"),t.vertex.code.add(Object(r.a)(o()))):t.vertex.code.add(Object(r.a)(i()))}},984:function(t,e,n){"use strict";n.d(e,"a",(function(){return j}));var a=n(30),r=n(31),i=n(586);function o(){var t=Object(a.a)(["\n    vec3 evaluateSpecularIlluminationHemisphere(vec3 ambientGround, vec3 ambientSky, float RdotNG, float roughness)\n    {\n      float cosTheta2 = 1.0 - RdotNG * RdotNG;\n      float intRadTheta = integratedRadiance(cosTheta2, roughness);\n\n      // Calculate the integrated directional radiance of the ground and the sky\n      float ground = RdotNG < 0.0 ? 1.0 - intRadTheta : 1.0 + intRadTheta;\n      float sky = 2.0 - ground;\n      return (ground * ambientGround + sky * ambientSky) * 0.5;\n    }\n    "]);return o=function(){return t},t}function s(){var t=Object(a.a)(["\n    float integratedRadiance(float cosTheta2, float roughness)\n    {\n      return (cosTheta2 - 1.0) / (cosTheta2 * (1.0 - roughness * roughness) - 1.0);\n    }\n    "]);return s=function(){return t},t}function c(){var t=Object(a.a)(["\n    vec3 evaluateDiffuseIlluminationHemisphere(vec3 ambientGround, vec3 ambientSky, float NdotNG)\n    {\n      return ((1.0 - NdotNG) * ambientGround + (1.0 + NdotNG) * ambientSky) * 0.5;\n    }\n    "]);return c=function(){return t},t}function l(t){var e=t.fragment.code;e.add(Object(r.a)(c())),e.add(Object(r.a)(s())),e.add(Object(r.a)(o()))}function u(){var t=Object(a.a)(["\n    vec3 blackLevelSoftCompression(vec3 inColor, PBRShadingInfo inputs){\n      vec3 outColor;\n      vec2 p = vec2(0.02 * (inputs.averageAmbientRadiance), 0.0075 * (inputs.averageAmbientRadiance));\n      outColor.x = gamutMapChanel(inColor.x, p) ;\n      outColor.y = gamutMapChanel(inColor.y, p) ;\n      outColor.z = gamutMapChanel(inColor.z, p) ;\n      return outColor;\n    }\n    "]);return u=function(){return t},t}function f(){var t=Object(a.a)(["\n    float gamutMapChanel(float x, vec2 p){\n      return (x < p.x) ? mix(0.0, p.y, x/p.x) : mix(p.y, 1.0, (x - p.x) / (1.0 - p.x) );\n    }"]);return f=function(){return t},t}function h(){var t=Object(a.a)(["\n    vec3 evaluateEnvironmentIllumination(PBRShadingInfo inputs) {\n      vec3 indirectDiffuse = evaluateDiffuseIlluminationHemisphere(inputs.groundIrradianceToSurface, inputs.skyIrradianceToSurface, inputs.NdotNG);\n      vec3 indirectSpecular = evaluateSpecularIlluminationHemisphere(inputs.groundRadianceToSurface, inputs.skyRadianceToSurface, inputs.RdotNG, inputs.roughness);\n\n      // From diffuse illumination calculate reflected color\n      vec3 diffuseComponent = inputs.diffuseColor * indirectDiffuse * INV_PI;\n\n      // From specular illumination calculate reflected color\n      vec2 dfg = prefilteredDFGAnalytical(inputs.roughness, inputs.NdotV);\n      vec3 specularColor = inputs.f0 * dfg.x + inputs.f90 * dfg.y;\n      vec3 specularComponent = specularColor * indirectSpecular;\n\n      return (diffuseComponent + specularComponent);\n    }\n    "]);return h=function(){return t},t}function d(){var t=Object(a.a)(["\n    const vec4 c0 = vec4(-1.0, -0.0275, -0.572,  0.022);\n    const vec4 c1 = vec4( 1.0,  0.0425,  1.040, -0.040);\n    const vec2 c2 = vec2(-1.04, 1.04);\n\n    vec2 prefilteredDFGAnalytical(float roughness, float NdotV) {\n        vec4 r = roughness * c0 + c1;\n        float a004 = min(r.x * r.x, exp2(-9.28 * NdotV)) * r.x + r.y;\n        return c2 * a004 + r.zw;\n    }\n    "]);return d=function(){return t},t}function p(){var t=Object(a.a)(["\n    float normalDistribution(float NdotH, float roughness)\n    {\n        float a = NdotH * roughness;\n        float b = roughness / (1.0 - NdotH * NdotH + a * a);\n        return b * b * INV_PI;\n    }\n    "]);return p=function(){return t},t}function b(){var t=Object(a.a)(["\n    struct PBRShadingInfo\n    {\n        float NdotL;                  // cos angle between normal and light direction\n        float NdotV;                  // cos angle between normal and view direction\n        float NdotH;                  // cos angle between normal and half vector\n        float VdotH;                  // cos angle between view direction and half vector\n        float LdotH;                  // cos angle between view light direction and half vector\n        float NdotNG;                 // cos angle between normal and normal of the ground\n        float RdotNG;                 // cos angle between view direction reflected of the normal and normal of the ground\n        float NdotAmbDir;             // cos angle between view direction and the fill light in ambient illumination\n        float NdotH_Horizon;          // cos angle between normal and half vector defined with horizon illumination\n        vec3 skyRadianceToSurface;         // integrated radiance of the sky based on the surface roughness (used for specular reflection)\n        vec3 groundRadianceToSurface;      // integrated radiance of the ground based on the surface roughness (used for specular reflection)\n        vec3 skyIrradianceToSurface;       // irradiance of the sky (used for diffuse reflection)\n        vec3 groundIrradianceToSurface;    // irradiance of the ground (used for diffuse reflection)\n\n        float averageAmbientRadiance;      // average ambient radiance used to deduce black level in gamut mapping\n        float ssao;                   // ssao coefficient\n        vec3 albedoLinear;            // linear color of the albedo\n        vec3 f0;                      // fresnel value at normal incident light\n        vec3 f90;                     // fresnel value at 90o of incident light\n\n        vec3 diffuseColor;            // diffuse color of the material used in environment illumination\n        float metalness;              // metalness of the material\n        float roughness;              // roughness of the material\n    };\n    "]);return b=function(){return t},t}function v(){var t=Object(a.a)(["\n    vec3 brdfSpecularWater(in PBRShadingWater props, float roughness, vec3 F0, float F0Max)\n    {\n      vec3  F = fresnelReflection(props.VdotH, F0, F0Max);\n      float dSun = normalDistributionWater(props.NdotH, roughness);\n      float V = geometricOcclusionKelemen(props.LdotH);\n\n      float diffusionSunHaze = mix(roughness + 0.045, roughness + 0.385, 1.0 - props.VdotH);\n      float strengthSunHaze  = 1.2;\n      float dSunHaze = normalDistributionWater(props.NdotH, diffusionSunHaze)*strengthSunHaze;\n\n      return ((dSun + dSunHaze) * V) * F;\n    }\n\n    vec3 tonemapACES(const vec3 x) {\n      return (x * (2.51 * x + 0.03)) / (x * (2.43 * x + 0.59) + 0.14);\n    }\n    "]);return v=function(){return t},t}function m(){var t=Object(a.a)(["\n    float geometricOcclusionKelemen(float LoH)\n    {\n        return 0.25 / (LoH * LoH);\n    }\n    "]);return m=function(){return t},t}function g(){var t=Object(a.a)(["\n    float normalDistributionWater(float NdotH, float roughness)\n    {\n      float r2 = roughness * roughness;\n      float NdotH2 = NdotH * NdotH;\n      float denom = pow((NdotH2 * (r2 - 1.0) + 1.0), dtrExponent) * PI;\n      return r2 / denom;\n    }\n    "]);return g=function(){return t},t}function y(){var t=Object(a.a)(["\n    vec3 fresnelReflection(float angle, vec3 f0, float f90) {\n      return f0 + (f90 - f0) * pow(1.0 - angle, 5.0);\n    }\n    "]);return y=function(){return t},t}function O(){var t=Object(a.a)(["\n    struct PBRShadingWater\n    {\n        float NdotL;   // cos angle between normal and light direction\n        float NdotV;   // cos angle between normal and view direction\n        float NdotH;   // cos angle between normal and half vector\n        float VdotH;   // cos angle between view direction and half vector\n        float LdotH;   // cos angle between light direction and half vector\n        float VdotN;   // cos angle between view direction and normal vector\n    };\n\n    float dtrExponent = ",";\n    "]);return O=function(){return t},t}function j(t,e){var n=t.fragment.code;t.include(i.a),3===e.pbrMode||4===e.pbrMode?(n.add(Object(r.a)(O(),e.useCustomDTRExponentForWater?"2.2":"2.0")),n.add(Object(r.a)(y())),n.add(Object(r.a)(g())),n.add(Object(r.a)(m())),n.add(Object(r.a)(v()))):1!==e.pbrMode&&2!==e.pbrMode||(t.include(l),n.add(Object(r.a)(b())),n.add(Object(r.a)(p())),n.add(Object(r.a)(d())),n.add(Object(r.a)(h())),n.add(Object(r.a)(f())),n.add(Object(r.a)(u())))}}}]);
//# sourceMappingURL=2.bdadc9f2.chunk.js.map