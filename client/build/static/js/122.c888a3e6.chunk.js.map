{"version":3,"sources":["../node_modules/@arcgis/core/layers/support/RasterWorker.js"],"names":["r","o","data","options","t","toJSON","pixelBlock","e","fromJSON","extent","s","this","symbolizer","symbolize","n","symbolizerJSON","histograms","rendererJSON","type","simpleStretch","srcPixelBlock","stretchParams","i","tileSize","maximumPyramidLevel","forEach","set","srcPixelBlocks","map","m","srcMosaicSize","coefs","l","destDimension","sampleSpacing","interpolation"],"mappings":"sZAI2aA,G,uFAAiBC,YAAED,EAAEE,KAAKF,EAAEG,S,cAAnBC,E,yBAAmCA,GAAGA,EAAEC,U,kIAAmBJ,GAAGA,EAAEK,WAAWC,IAAEC,SAASP,EAAEK,YAAYL,EAAEQ,OAAOR,EAAEQ,OAAOL,IAAEI,SAASP,EAAEQ,QAAQ,KAAK,IAAMC,EAAEC,KAAKC,WAAWC,UAAUZ,GAAG,OAAOD,YAAEU,GAAGA,EAAEL,Y,gFAAiCL,G,uEAASW,KAAKC,WAAWE,IAAEN,SAASR,EAAEe,gBAAgBf,EAAEgB,YAAY,mBAAmB,OAAOZ,EAAEO,KAAKC,iBAAY,EAAOR,EAAEa,aAAaC,QAAQP,KAAKC,WAAWK,aAAaD,WAAWhB,EAAEgB,Y,qIAAoBZ,GAAG,IAAMH,EAAEU,KAAKC,WAAWO,cAAcZ,IAAEC,SAASJ,EAAEgB,eAAehB,EAAEiB,eAAe,OAAOrB,YAAEC,GAAGA,EAAEI,Y,mDAAuCD,GAAG,IAAMH,EAAES,YAAEH,IAAEC,SAASJ,EAAEgB,gBAAgB,OAAOpB,YAAEC,K,4BAASG,GAAG,IAAMH,EAAEqB,YAAEf,IAAEC,SAASJ,EAAEgB,eAAehB,EAAEmB,SAASnB,EAAEoB,qBAAqB,OAAOvB,GAAGA,EAAEwB,SAAS,SAACzB,EAAEI,GAAKH,EAAEyB,IAAItB,EAAE,MAAMJ,OAAE,EAAOA,EAAEK,aAAaL,YAAEC,K,kFAA4BD,G,8EAASI,EAAEJ,EAAE2B,eAAeC,KAAK,SAAA5B,GAAC,OAAEA,EAAE,IAAIO,IAAEP,GAAG,QAAOC,EAAE4B,YAAEzB,EAAEJ,EAAE8B,eAAmB9B,EAAE+B,M,yCAAa9B,GAAGA,EAAEI,U,cAAeK,EAAEsB,YAAE/B,EAAED,EAAEiC,cAAcjC,EAAE+B,MAAM/B,EAAEkC,cAAclC,EAAEmC,e,kBAAsBzB,GAAGA,EAAEL,U","file":"static/js/122.c888a3e6.chunk.js","sourcesContent":["/*\nAll material copyright ESRI, All Rights Reserved, unless otherwise specified.\nSee https://js.arcgis.com/4.18/esri/copyright.txt for details.\n*/\nimport{resolve as r}from\"../../core/promiseUtils.js\";import t from\"../../geometry/Extent.js\";import\"../../geometry.js\";import e from\"./PixelBlock.js\";import{decode as o}from\"./rasterFormats/RasterCodec.js\";import{estimateStatisticsHistograms as s,split as i,mosaic as m,approximateTransform as l}from\"./rasterFunctions/pixelUtils.js\";import n from\"../../renderers/support/RasterSymbolizer.js\";export default class{async decode(r){const t=await o(r.data,r.options);return t&&t.toJSON()}symbolize(o){o.pixelBlock=e.fromJSON(o.pixelBlock),o.extent=o.extent?t.fromJSON(o.extent):null;const s=this.symbolizer.symbolize(o);return r(s&&s.toJSON())}async updateSymbolizer(r){var t;this.symbolizer=n.fromJSON(r.symbolizerJSON),r.histograms&&\"rasterStretch\"===(null==(t=this.symbolizer)?void 0:t.rendererJSON.type)&&(this.symbolizer.rendererJSON.histograms=r.histograms)}stretch(t){const o=this.symbolizer.simpleStretch(e.fromJSON(t.srcPixelBlock),t.stretchParams);return r(o&&o.toJSON())}estimateStatisticsHistograms(t){const o=s(e.fromJSON(t.srcPixelBlock));return r(o)}split(t){const o=i(e.fromJSON(t.srcPixelBlock),t.tileSize,t.maximumPyramidLevel);return o&&o.forEach(((r,t)=>{o.set(t,null==r?void 0:r.toJSON())})),r(o)}async mosaicAndTransform(r){const t=r.srcPixelBlocks.map((r=>r?new e(r):null)),o=m(t,r.srcMosaicSize);if(!r.coefs)return o&&o.toJSON();const s=l(o,r.destDimension,r.coefs,r.sampleSpacing,r.interpolation);return s&&s.toJSON()}}\n"],"sourceRoot":""}