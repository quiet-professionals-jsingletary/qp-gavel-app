(this["webpackJsonpqp-ampd-app"]=this["webpackJsonpqp-ampd-app"]||[]).push([[111],{1045:function(e,t,a){"use strict";a.r(t);var r=a(13),i=a(2),n=a(3),o=a(61),l=a(57),c=a(5),p=a(6),b=a(0),s=(a(15),a(14),a(18),a(1)),y=a(34),u=a(8),O=(a(12),a(21),a(22),a(48)),j=a(74),d=(a(99),a(39)),f=a(184),m=a(236),v=a(284),h=a(286),w=a(283),x=a(285),G=a(383),S=a(369),g=function(e){Object(c.a)(a,e);var t=Object(p.a)(a);function a(e){var r;return Object(i.a)(this,a),(r=t.call(this,e)).capabilities={operations:{supportsEditing:!0}},r.legendEnabled=!1,r.lineGraphics=new S.a,r.opacity=1,r.pointGraphics=new S.a,r.polygonGraphics=new S.a,r.textGraphics=new S.a,r.type="map-notes",r}return Object(n.a)(a,[{key:"readFullExtent",value:function(e,t){if(!t.layers.length)return new j.a({xmin:-180,ymin:-90,xmax:180,ymax:90,spatialReference:O.a.WGS84});var a=O.a.fromJSON(t.layers[0].layerDefinition.spatialReference);return t.layers.reduce((function(e,t){var a=t.layerDefinition.extent;return a?j.a.fromJSON(a).union(e):e}),new j.a({spatialReference:a}))}},{key:"readCapabilities",value:function(e,t){return{operations:{supportsEditing:!t.layers.some((function(e){return!!e.layerDefinition.drawingInfo}))}}}},{key:"readFeatureCollections",value:function(e,t,a){var r=t.layers.map((function(e){var t=new G.default;return t.read(e,a),t}));return new d.a({items:r})}},{key:"readMinScale",value:function(e,t){var a,i=Object(r.a)(t.layers);try{for(i.s();!(a=i.n()).done;){var n=a.value;if(null!=n.layerDefinition.minScale)return n.layerDefinition.minScale}}catch(o){i.e(o)}finally{i.f()}return 0}},{key:"readMaxScale",value:function(e,t){var a,i=Object(r.a)(t.layers);try{for(i.s();!(a=i.n()).done;){var n=a.value;if(null!=n.layerDefinition.maxScale)return n.layerDefinition.maxScale}}catch(o){i.e(o)}finally{i.f()}return 0}},{key:"load",value:function(e){return this.addResolvingPromise(this.loadFromPortal({supportedTypes:["Feature Collection"]},e)),Promise.resolve(this)}},{key:"read",value:function(e,t){"featureCollection"in e&&Object(o.a)(Object(l.a)(a.prototype),"read",this).call(this,e.featureCollection,t),Object(o.a)(Object(l.a)(a.prototype),"read",this).call(this,e,t)}}]),a}(Object(h.a)(Object(x.a)(Object(v.a)(Object(w.a)(Object(m.a)(f.a))))));Object(b.a)([Object(y.a)(["web-map","portal-item"],"fullExtent",["layers"])],g.prototype,"readFullExtent",null),Object(b.a)([Object(s.b)({readOnly:!0})],g.prototype,"capabilities",void 0),Object(b.a)([Object(y.a)(["portal-item","web-map"],"capabilities",["layers"])],g.prototype,"readCapabilities",null),Object(b.a)([Object(s.b)({readOnly:!0})],g.prototype,"featureCollections",void 0),Object(b.a)([Object(y.a)(["web-map","portal-item"],"featureCollections",["layers"])],g.prototype,"readFeatureCollections",null),Object(b.a)([Object(s.b)({readOnly:!0,json:{origins:{service:{read:{enabled:!1}}},name:"showLegend",write:!0}})],g.prototype,"legendEnabled",void 0),Object(b.a)([Object(s.b)(Object(S.b)("lineGraphics"))],g.prototype,"lineGraphics",void 0),Object(b.a)([Object(s.b)({type:["show","hide"]})],g.prototype,"listMode",void 0),Object(b.a)([Object(y.a)(["web-map","portal-item"],"minScale",["layers"])],g.prototype,"readMinScale",null),Object(b.a)([Object(y.a)(["web-map","portal-item"],"maxScale",["layers"])],g.prototype,"readMaxScale",null),Object(b.a)([Object(s.b)({type:Number,json:{name:"opacity",write:!0}})],g.prototype,"opacity",void 0),Object(b.a)([Object(s.b)(Object(S.b)("pointGraphics"))],g.prototype,"pointGraphics",void 0),Object(b.a)([Object(s.b)(Object(S.b)("polygonGraphics"))],g.prototype,"polygonGraphics",void 0),Object(b.a)([Object(s.b)(Object(S.b)("textGraphics"))],g.prototype,"textGraphics",void 0),Object(b.a)([Object(s.b)({readOnly:!0,json:{read:!1}})],g.prototype,"type",void 0);var k=g=Object(b.a)([Object(u.a)("esri.layers.MapNotesLayer")],g);t.default=k}}]);
//# sourceMappingURL=111.1f9a59cd.chunk.js.map